{
  "name": "stuff.js",
  "version": "0.3.0",
  "description": "A smart sandboxed programmable iframe.",
  "main": "lib/stuff.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "node-static": "~0.6.5",
    "uglify-js": "~2.2.1"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node server.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/RyzacInc/stuff.js.git"
  },
  "author": {
    "name": "amasad"
  },
  "private": "true",
  "readme": "Stuff.js\n--------\n\nA secure and easy way to run arbitrary HTML / JS / CSS code in an iframe.\n\nStuff.js is a client-side JS library that is meant to be loaded from different [origins](https://developer.mozilla.org/en-US/docs/JavaScript/Same_origin_policy_for_JavaScript) to restrict access from the iframe to it's parent(s). [Read more](http://blog.amasad.me/2012/12/11/stuffjs/).\n\nNode is only required for testing and developlment and is only used as a static server. Feel free to use your web server of choice.\n\n\n## Run the example\n\n```\nnode dist/example/server.js\n```\n\nNavigate browser to http://localhost:8080/example\n\n\n\n## Running Tests\n\n```\nnode server.js\n```\n\nNavigate browser to http://localhost:8080/test/tests.html\n\n## Building\n\nAn up-to-date pre-built version can be found in the `dist` folder.\nTo build:\n\n```\nnode build.js\n```\n\n\n## Usage\n\nPlace the secure folder on a different origin you intend to use stuff.js.\nOrigin could mean different protocol, port, and or domain name.\n\n```javascript\n\nstuff(secureUrl, function (context) {\n  context.load('<body>stuff</body>');\n});\n```\n\n\n## API\n\n### stuff(url, [options], cb(context))\n\nThe main constructor function that loads the secure iframe from `url` and\ncalls `cb` with the context (see below). Optionally, you can pass in an\noptions object as the second argument and can contain any of the following:\n\n* `el` an element to append the iframe to. Defaults to the body.\n* `sandbox` You can pass in a space delimited string of the [HTML5 sandbox flags](http://www.html5rocks.com/en/tutorials/security/sandboxed-iframes/) or simply `true` to add the attribute with the minimum flags needed to function:\n  * `allow-scripts` needed for the iframe to function.\n  *  `allow-same-origin` needed for basic interactions with the iframe.\n\n\n### stuff.clear()\n\nClears all stuff iframe instances from the page.\n\n### Context\n\nThe execution context for the code. It is the class that wraps the secure iframe.\n\n### Context#load(htmlCode, cb())\n\nWrites `htmlCode` to the iframe document and calls `cb` when the load event fires.\n\n### Context#evaljs(jsCode, cb(error, result))\n\nExecutes arbitrary javascript `jsCode` in the context. Calls `cb` with the error (null if no error)\nand the result.\n\n### Context#html(cb(htmlCode))\n\nGets the current iframe document html.\n\n\n### Context#iframe\n\nIs just the iframe element available for DOM manipulation. Note that if you move the iframe, it has to reload and will *lose all code and state*.\n\n### Custom events\n\nSometimes you may find yourself wanting to communicate back to the outside world from inside the execution\ncontext. You can do this simply by calling: `window.parent.stuffEmit(event, data)`. On the top window you\ncan use the `Context#on` and `Context#off` to add or remove custom events.\n\n#### Context#on(event, cb(data))\n\nListen on custom events.\n\n#### Context#off(event, [cb])\n\nRemove callback `cb` if specified. Otherwise nuke all listeners.\n\n## Browser support\n\nTested on:\n\n* Latest Chrome and Firefox.\n* Opera 12+\n* IE9 and IE10\n* Safari 6\n\n## License\nMIT License.  \nCopyright (c) 2012 Amjad Masad &lt;amjad@codecademy.com&gt; Ryzac, Inc.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/RyzacInc/stuff.js/issues"
  },
  "homepage": "https://github.com/RyzacInc/stuff.js",
  "_id": "stuff.js@0.3.0",
  "dist": {
    "shasum": "d3ee54982a7520317861e79ee5ea8b0b04d4da6d"
  },
  "_from": "https://github.com/adamfortuna/stuff.js/tarball/master",
  "_resolved": "https://github.com/adamfortuna/stuff.js/tarball/master"
}
